[include fluidd.cfg]

##coment
# This file contains pin mappings for the Anycubic i3 Mega with
# Ultrabase from 2017. (This config may work on an Anycubic i3 Mega v1
# prior to the Ultrabase if you comment out the definition of the
# endstop_pin in the stepper_z1 section.) To use this config, the
# firmware should be compiled for the AVR atmega2560.
# See docs/Config_Reference.md for a description of parameters.

#############################################################
# Loading Printer Configs                                   #
#############################################################
#[include /home/pi/klipper_config/adxl.cfg]
[include bed_leveling.cfg]
[include extruder.cfg]
[include stepper.cfg]
[include shell_command.cfg]
[include timelapse.cfg]
#############################################################
# Loading Macros                                            #
#############################################################

[include /home/pi/printer_data/config/macros/calibration_macros.cfg]
[include macros/makros.cfg]
#[include /macros/pause_macro.cfg]
[include macros/prepare_for_print.cfg]
[include macros/start_end_macro.cfg]

#[include /home/pi/klipper_config/variables.cfg]
[save_variables]
filename: variables.cfg
#############################################################
# Misc                                                      #
#############################################################
[exclude_object]

[display_status]
# change filament

#############################################################
#############################################################
[input_shaper]
#shaper_type_x: mzv
#shaper_freq_x: 75.0
#shaper_type_y: mzv #3hump_ei
#shaper_freq_y: 41.4
[idle_timeout]
gcode:
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
    TURN_OFF_HEATERS
    M84
timeout: 900 #600
#   Idle time (in seconds) to wait before running the above G-Code
#   commands. The default is 600 seconds.

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000 # 3200 
max_accel_to_decel: 1000 # 2000
max_z_velocity: 10 #8 
max_z_accel: 100 #80
square_corner_velocity: 6 #5

#############################################################
#MCU settings                                               #
#############################################################

[mcu]
serial: /dev/serial/by-id/usb-Silicon_Labs_CP2102_USB_to_UART_Bridge_Controller_0001-if00-port0
[mcu rpi]
serial: /tmp/klipper_host_mcu
# Example1: A led strip controlled by the GPIO20 on the RPi
[temperature_sensor Raspberry Pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100
[output_pin caselight]
pin: rpi:gpio16 #20
[gcode_macro TOGGLE_CASELIGHT]
gcode:
  SET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}
#############################################################
#MCU settings                                               #
#############################################################

#############################################################
#Fans settings                                              #
#############################################################
[heater_fan extruder_fan]
pin: PL5
[controller_fan stepper_driver_fan]
pin: PH4
#max_power:
#shutdown_speed:
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#   See the "fan" section for a description of the above parameters.
#fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver is active.
#   The default is 1.0
idle_timeout: 360
#   The amount of time (in seconds) after a stepper driver or heater
#   was active and the fan should be kept running. The default
#   is 30 seconds.
idle_speed: 1
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver was active and
#   before the idle_timeout is reached. The default is fan_speed.
#heater:
stepper: stepper_z, stepper_y, stepper_x, stepper_z1
#   Name of the config section defining the heater/stepper that this fan
#   is associated with. If a comma separated list of heater/stepper names
#   is provided here, then the fan will be enabled when any of the given
#   heaters/steppers are enabled. The default heater is "extruder", the
#   default stepper is all of them.

#[heater_fan stepper_driver_fan]
#pin: PH4
[fan]   #fan part cooling
pin: PH6
#Fans settings end                                          #
#############################################################
#############################################################
#Heater Bed                                                 #
#############################################################
[heater_bed]
heater_pin: PH5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK6
#control: pid
#pid_Kp: 73.517 
#pid_Ki: 2.753 #
#pid_Kd: 490.724
min_temp: 0
max_temp: 110
smooth_time: 1
#############################################################

######################################################################
# Beeper
######################################################################
# M300 : Play tone. Beeper support, as commonly found on usual LCD
# displays (i.e. RepRapDiscount 2004 Smart Controller, RepRapDiscount
# 12864 Full Graphic). This defines a custom I/O pin and a custom
# GCODE macro.  Usage:
#   M300 [P<ms>] [S<Hz>]
#   P is the tone duration, S the tone frequency.
# The frequency won't be pitch perfect.
[output_pin buzz]
pin: PC6
pwm: True
[gcode_macro M300]
gcode:
    {% set S = params.S|default(800)|float %}
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=buzz VALUE=0.5 CYCLE_TIME={ 1.0 / S | float }
    G4 P{P}
    SET_PIN PIN=buzz VALUE=0
# Beeper end
######################################################################

######################################################################
# respond
######################################################################
[respond]
default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
#default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".
# respond end
######################################################################

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 75.6
#*# shaper_type_y = mzv
#*# shaper_freq_y = 41.4
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 73.850
#*# pid_ki = 1.844
#*# pid_kd = 739.420
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 25.464
#*# pid_ki = 1.296
#*# pid_kd = 125.091

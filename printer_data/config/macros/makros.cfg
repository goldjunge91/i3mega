[gcode_macro LOAD_FILAMENT]
gcode:
    G92 E0
    M83
    {% set speed = params.SPEED|default(200) %}
    {% set speed2 = params.SPEED|default(2000) %}
    M300 # beep
    M117 "Start Loading"
    M400
    G1 E50 F{speed2}
    M117 schiebe mit F"{speed2}" mm/min vor
    M400
    M117 "50mm vorgeschoben"
    M400
    G4 P250
    G1 E40 F{speed}
    M400
    M117 F"{speed}" starte purging
    G1 E10 F120 #purge
    M400
    M117 "Filament geladen"
    G90
    M82
    M300
    M300

[gcode_macro UNLOAD_FILAMENT]
gcode:
    G92 E0
    M83
    {% set speed = params.SPEED|default(200) %}
    {% set speed2 = params.SPEED|default(2000) %}
    M300 # beep
    M117 "Start Unloading"
    M117 F"{speed}"
    G1 E25 F{speed} # purge
    M117 "purging for unload done"
    M400
    M117 F"{speed}"
    M400
    G1 E-100 F{speed2}
    M400
    M117 "40mm retracted"
    M400
    G1 E-100 F{speed}
    M400
    M117 "Done Unloading filament"
    M82
    M300
    M300
#####################################################################
#####################################################################
# Override M117 command with rawparams
#####################################################################
# The macro below will override the default M117 command to echo the message.
# It uses the rawparams pseudo-variable that contains the full unparsed
# parameters that was passed to the M117 command.
# As this can include comments, we are trimming the text when a `;` or `#` is
# found, and escaping any existing 
[gcode_macro M117]
rename_existing: M117.1
gcode:
  {% if rawparams %}
    {% set escaped_msg = rawparams.split(';')[0]|replace('"', '\\"') %}
   # {% set escaped_msg = rawparams.split(';', 1)[0].split('\x23', 1)[0]|replace('"', '\\"') %}
    SET_DISPLAY_TEXT MSG="{escaped_msg}"
    RESPOND TYPE=command MSG="{escaped_msg}"
  {% else %}
    SET_DISPLAY_TEXT
  {% endif %}
# Override M117 command with rawparams END of Macro
######################################################################

######################################################################
# Filament Change
######################################################################
# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[gcode_macro M600]
description: filament change
gcode:
    {% set X = params.X|default(20)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    G1 E-50 F1000
    G1 E-50 F1000
    M300 S299 P200
    M300 S299 P200
    RESTORE_GCODE_STATE NAME=M600_state

# Filament Change end of macro
######################################################################

######################################################################
# Cancel Print
######################################################################
[gcode_macro M486]
description: cancel print
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}

# Cancel Print end of macro
######################################################################